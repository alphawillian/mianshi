代码规范
1：构造函数首字母大写

原型规则和示例
1：所有的引用类型（数组、对象、函数）除了"null"以外），都具有对象特性，即可自由扩展属性

2：所有的引用类型（数组、对象、函数）（null除外），都有一个__proto__属性（隐式原型），属性值是一个普通的对象。

3：所有的函数，都有一个prototype属性（显式原型），属性值也是一个普通对象。

4：所有的引用类型（数组、对象、函数）__proto__属性值指向它的构造函数的"prototype"属性值

5:当试图得到一个对象的某个属性时，如果这个对象本身没有这个属性，那么回去它的__proto__(即它的构造函数的prototype)中去寻找 。



作用域和闭包-执行上下文

fn();//不会报错
function fn (){
	//函数声明
}
fn1();//不报错 undefined
var fn1 = function(){
	//函数表达式
}



