代码规范
1：构造函数首字母大写

原型规则和示例
1：所有的引用类型（数组、对象、函数）除了"null"以外），都具有对象特性，即可自由扩展属性

2：所有的引用类型（数组、对象、函数）（null除外），都有一个__proto__属性（隐式原型），属性值是一个普通的对象。

3：所有的函数，都有一个prototype属性（显式原型），属性值也是一个普通对象。

4：所有的引用类型（数组、对象、函数）__proto__属性值指向它的构造函数的"prototype"属性值

5:当试图得到一个对象的某个属性时，如果这个对象本身没有这个属性，那么回去它的__proto__(即它的构造函数的prototype)中去寻找 。



作用域和闭包-执行上下文

fn();//不会报错
function fn (){
	//函数声明
}
fn1();//不报错 undefined
var fn1 = function(){
	//函数表达式
}


ajax readyState状态码含义
0	(未初始化)还没有调用send()方法
1	(载入)已调用send()方法，正在发送请求
2	(载入完成)send()方法执行完成，已经接受到全部响应内容
3	(交互)正在解析响应内容
4	(完成)响应内容解析完成，可以在客户端调用了
	
	status
2xx 成功处理请求。如 200
3xx 需要重定向，浏览器直接跳转
4xx 客户端请求错误，如404
5xx 服务器端的错误

cookie
1:本身用户客户端和服务器端的通信
2：但是它有本地存储的功能，于是就被"借用";
3:使用 document。cookie = ... 获取和修改即可

cookie 用于存储的缺点
1：存储量太小，只有4kb
2：所有的http请求都带着，会影响获取资源的效率
3：API简单，需要封装才能使用 documentcookie = ...(是一个字符串)。

localStorage和sessionStorage
1: HTML5 专门为存储而设计，最大容量为5M
2: API简单易用

localStorage和sessionStorage可能遇到的问题
1：ios safari 隐藏模式下 localStorage.getItem会报错，建议用try-catch 封装一下





